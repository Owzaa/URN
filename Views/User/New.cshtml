@using UrnBMS.Models;
@model UserViewModel

@{ ViewBag.Title = "New User"; }

<h2>Add a new Employee</h2>

@using (Html.BeginForm("new", "user", FormMethod.Post, new { @class = "form-horizontal" }))
{
	@Html.AntiForgeryToken()

	@Html.ValidationSummary(false, "", new { @class = "text-danger" })

	<div class="form-group">
		@Html.LabelFor(field => field.EmployeeNumber, new { @class = "control-label col-md-2" })

		<div class="col-md-4">
			@Html.EditorFor(field => field.EmployeeNumber, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(field => field.EmployeeNumber, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(field => field.FirstName, new { @class = "control-label col-md-2" })

		<div class="col-md-4">
			@Html.EditorFor(field => field.FirstName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(field => field.FirstName, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(field => field.LastName, new { @class = "control-label col-md-2" })

		<div class="col-md-4">
			@Html.EditorFor(field => field.LastName, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(field => field.LastName, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(field => field.Email, new { @class = "control-label col-md-2" })

		<div class="col-md-4">
			@Html.EditorFor(field => field.Email, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(field => field.Email, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(field => field.Password, new { @class = "control-label col-md-2" })

		<div class="col-md-4">
			@Html.EditorFor(field => field.Password, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(field => field.Password, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(field => field.ConfirmPassword, new { @class = "control-label col-md-2" })

		<div class="col-md-4">
			@Html.EditorFor(field => field.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(field => field.ConfirmPassword, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		<div class="col-md-offset-2">

			<button type="submit" class="btn btn-success">
				<i class="fa fa-plus-circle"></i> Add Employee
			</button>
			&nbsp;
			<button type="reset" class="btn btn-default">
				<i class="fa fa-refresh"></i> Start Over
			</button>

		</div>
	</div>
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}